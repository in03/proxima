[tool.poetry]
name = "dr_proxima"
version = "1.0.7"
description = "Transcode source media in DaVinci Resolve using multiple machines. Great for quickly creating proxies without interrupting work."
authors = ["Caleb Trevatt <sk188okj@duck.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://in03.github.com/proxima"
repository = "https://github.com/in03/proxima"
keywords = ["DaVinci Resolve", "Scripting", "Proxy", "Transcode", "Distributed", "Batch"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
]

packages = [
    {include = "src/proxima"}
]

include = ["version_constraint_key"]

[tool.poetry.dependencies]
python = ">=3.10.0,<4.0.0"
celery = "^5.1.2"
rich = "^10.12.0"
typer = {extras = ["rich"], version = "^0.7.0"}
pyfiglet = "^0.8.post1"
redis = "^3.5.3"
requests = "^2.26.0"
"ruamel.yaml" = "^0.17.17"
schema = "^0.7.5"
deepdiff = "^5.7.0"
pymediainfo = "^5.1.0"
yaspin = "^2.1.0"
shortuuid = "^1.0.9"
termynal = "^0.2.0"
pytest = "^7.2.0"
GitPython = "^3.1.30"
semver = "^2.13.0"
click = "^8.1.3"
shellingham = "^1.5.0.post1"
notify-py = "^0.3.42"
pydantic = {extras = ["dotenv"], version = "^1.10.4"}
rtoml = "^0.9.0"
pydavinci-18 = "^0.3.1"

[tool.poetry.group.dev.dependencies]
isort = "^5.10.1"
pre-commit = "^2.16.0"
commitizen = "^2.27.1"
flake8 = "^6.0.0"
python-semantic-release = "^7.33.0"
black = "^23.1.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mike = "^1.1.2"
mkdocs-git-revision-date-localized-plugin = "^1.1.0"
termynal = "^0.2.0"
mkdocs = "*"
mkdocs-gen-files = "^0.4.0"
mkdocs-literate-nav = "^0.5.0"
mkdocs-section-index = "^0.3.4"
mkdocstrings = "^0.19.0"
mkdocs-material = "^8.5.10"

[tool.black]
line_length = 88

[tool.isort]
profile = "black"
multi_line_output = 3
skip="__init__.py"

[tool.semantic_release]
version_variable = [
    "src/proxima/__init__.py:__version__",
    "pyproject.toml:version"
]
branch = "main"
upload_to_pypi = true
upload_to_release = true
build_command = "pip install poetry && poetry build"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
proxima = "proxima.cli.main:main"